function [xhat, meas] = hist_acc_gyro()
% Collects data and creates histograms

  %% Setup necessary infrastructure
  import('se.hendeby.sensordata.*');  % Used to receive data.

  
  % Saved data.
  nx = 3;
 
  meas = struct('t', zeros(1, 0),...
                'acc', zeros(3, 0),...
                'gyr', zeros(3, 0),...
                'mag', zeros(3, 0),...
                'orient', zeros(4, 0));
  try
    %% Create data link
    server = StreamSensorDataReader(3400);
    % Makes sure to resources are returned.
    sentinel = onCleanup(@() server.stop());

    server.start();  % Start data reception.
  catch e
    fprintf(['Unsuccessful connecting to client!\n' ...
      'Make sure to start streaming from the phone *after* '...
             'running this function!']);
    return;
  end

  t0 = [];
  
  %% Filter loop
  while server.status()  % Repeat while data is available
      
    % Get the next measurement set, assume all measurements
    % within the next 5 ms are concurrent (suitable for sampling
    % in 100Hz).
    data = server.getNext(5);

    if isnan(data(1))  % No new data received
      continue;
    end
    t = data(1)/1000;  % Extract current time

    if isempty(t0)  % Initialize t0
      t0 = t;
    end

    if (t + 
    
    gyr = data(1, 5:7)';
    if ~any(isnan(gyr))  % Gyro measurements are available.
        % Prediction step
        dt = t-t0;
        t0 = t;
        [x, P] = tu_qw(x, P, gyr, dt, Rw);

        % Do something
    end

    acc = data(1, 2:4)';
    if ~any(isnan(acc))  % Acc measurements are available.
      [x, P] = mu_acc(x, P, acc, Ra, g0);
      x = mu_normalizeQ(x);
    end

    mag = data(1, 8:10)';
    if ~any(isnan(mag))  % Mag measurements are available.
      % Do something
    end

    orientation = data(1, 18:21)';  % Google's orientation estimate.

    % Visualize result
    if rem(counter, 10) == 0
      setOrientation(ownView, x(1:4));
      title(ownView, 'OWN', 'FontSize', 16);
      if ~any(isnan(orientation))
        if isempty(googleView)
          subplot(1, 2, 2);
          % Used for visualization.
          googleView = OrientationView('Google filter', gca);
        end
        setOrientation(googleView, orientation);
        title(googleView, 'GOOGLE', 'FontSize', 16);
      end
    end
    counter = counter + 1;

    % Save estimates
    xhat.x(:, end+1) = x;
    xhat.P(:, :, end+1) = P;
    xhat.t(end+1) = t - t0;

    meas.t(end+1) = t - t0;
    meas.acc(:, end+1) = acc;
    meas.gyr(:, end+1) = gyr;
    meas.mag(:, end+1) = mag;
    meas.orient(:, end+1) = orientation;
  end
end
